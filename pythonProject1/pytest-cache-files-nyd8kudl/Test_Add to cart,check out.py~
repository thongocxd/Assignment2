from selenium import webdriver
from selenium.common import StaleElementReferenceException
from selenium.webdriver.common.by import By
from selenium.webdriver.support.ui import WebDriverWait
from selenium.webdriver.support import expected_conditions as EC
import time




driver = webdriver.Chrome()
driver.get("http://localhost/opencart/index.php?route=common/home&language=en-gb")

def test_case_022():
    WebDriverWait(driver, 10).until(EC.element_to_be_clickable((By.LINK_TEXT, "My Account"))).click()
    WebDriverWait(driver, 10).until(EC.element_to_be_clickable((By.LINK_TEXT, "Login"))).click()

    email = driver.find_element(By.ID, "input-email")
    password = driver.find_element(By.ID, "input-password")
    email.send_keys("phucpro2104@gmail.com")
    password.send_keys("123456")
    driver.find_element(By.CSS_SELECTOR, "button.btn.btn-primary").click()
    time.sleep(2)
    # Truy cập vào trang sản phẩm và thêm sản phẩm vào giỏ hàng
    driver.get("http://localhost/opencart/index.php?route=product/product&product_id=40")

    # Nhấn nút "Thêm vào giỏ hàng"
    add_to_cart_button = WebDriverWait(driver, 10).until(
        EC.element_to_be_clickable((By.ID, "button-cart"))
    )
    add_to_cart_button.click()
    time.sleep(10)

    # Đợi giỏ hàng được cập nhật và truy cập vào trang giỏ hàng
    WebDriverWait(driver, 20).until(
        EC.element_to_be_clickable((By.CSS_SELECTOR, "i.fa-solid.fa-cart-shopping"))
    ).click()
    time.sleep(2)
    # Kiểm tra số lượng trong giỏ hàng
    quantity_input = driver.find_element(By.CSS_SELECTOR, "input[name='quantity']")

    # Lấy giá trị của thuộc tính value trong trường input
    quantity_value = quantity_input.get_attribute("value")

    # Kiểm tra xem giá trị của số lượng có đúng không
    assert quantity_value == "1", f"Số lượng trong giỏ hàng không đúng. Expected: 1, Found: {quantity_value}"

    print(f"Số lượng trong giỏ hàng đúng: {quantity_value}")

    driver.quit()

def test_case_023():
    driver.get("http://localhost/opencart/index.php?route=common/home&language=en-gb")
    WebDriverWait(driver, 10).until(EC.element_to_be_clickable((By.LINK_TEXT, "My Account"))).click()
    WebDriverWait(driver, 10).until(EC.element_to_be_clickable((By.LINK_TEXT, "Login"))).click()
    email = driver.find_element(By.ID, "input-email")
    email.send_keys("phucpro2104@gmail.com")
    password = driver.find_element(By.ID, "input-password")
    password.send_keys("123456")
    driver.find_element(By.CSS_SELECTOR, "button.btn.btn-primary").click()
    time.sleep(2)

    empty_cart_message = driver.find_element(By.CSS_SELECTOR, "#content p").text
    if "Your shopping cart is empty!" in empty_cart_message:
        print("The cart is already empty.")
        return

    while True:
        remove_buttons = driver.find_elements(By.CSS_SELECTOR, "button[formaction*='checkout/cart.remove']")
        if not remove_buttons:
            break

        for button in remove_buttons:
            try:
                button.click()
                time.sleep(2)
            except StaleElementReferenceException:
                break

    print("Cart cleared.")

def add_to_cart_multiple_clicks(driver, product_name, click_count=3):
    # Chuyển hướng đầu ra để ẩn thông báo
    old_stdout = sys.stdout
    sys.stdout = io.StringIO()

    # Gọi search_products
    product_details = search_products(driver, product_name)

    # Khôi phục lại đầu ra sau khi gọi xong
    sys.stdout = old_stdout

    if not product_details:
        print("No products found.")
        return

    first_product = product_details[0]
    print(f"Adding to cart: {first_product['name']} at price {first_product['price']}")
    driver.get(first_product['link'])

    wait = WebDriverWait(driver, 10)

    for _ in range(click_count):
        # Chờ nút "Add to Cart" sẵn sàng và nhấn
        add_to_cart_button = wait.until(EC.element_to_be_clickable((By.ID, "button-cart")))
        add_to_cart_button.click()

        # Chờ thông báo thêm sản phẩm thành công xuất hiện
        success_message = wait.until(EC.visibility_of_element_located((By.CSS_SELECTOR, "div.alert-success")))
        assert product_name in success_message.text, f"Product name '{product_name}' not found in success message."

        # Refresh trang để chuẩn bị cho lần nhấn tiếp theo
        driver.refresh()